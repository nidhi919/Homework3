---
import Layout from '../layouts/Layout.astro'
import '../styles/register.css'
import { app } from '../firebase/server'
import { getAuth } from 'firebase-admin/auth'
import '../styles/App.css'
//import type { Request, Response } from 'express';
const auth = getAuth(app)

// TODO Check if the user has an active session
// If the session is verified, redirect the user to the dashboard
// HINT: See index.astro for a reference on how to do this
// Your code here

// Check if the user has an active session and redirect if authenticated
async function checkSession() {
    try {
        const sessionCookie = Astro.cookies.get('session')?.value || ''; // Retrieve session cookie value
        const decodedClaims = await auth.verifySessionCookie(sessionCookie, true); // Verify session
        if (decodedClaims) {
            return Astro.redirect('/dashboard'); // Redirect if session is active
        }
    } catch (error) {
        console.error('Session not active:', error); // Log any errors (optional)
    }
}

// Invoke checkSession immediately
await checkSession();

---

<Layout title="Register">
    <body>
        <div class="create-user">
            <form action="/api/auth/register" method="post" class="signup-form">
                <header class="form-title">Create a New User</header>
                <label for="name">Name</label>
                <input
                    id="name"
                    name="name"
                    class="form-control"
                    placeholder="Enter First Name"
                />
                <label for="email">Email</label>
                <input
                    id="email"
                    name="email"
                    class="form-control"
                    placeholder="Enter Email ID"
                />
                <label for="password">Password</label>
                <input
                    id="password"
                    type="password"
                    name="password"
                    class="form-control"
                    placeholder="Enter Password"
                />
                <button
                    id="createUserButton"
                    type="submit"
                    class="btn btn-primary"
                    style="margin-top: 10px"
                >
                    Submit
                </button>
                <a href="/signin" class="btn btn-primary">Go to Login</a>
                <div class="hidden-info">
                    <p id="msg-for-failure-sucess"></p>
                </div>
            </form>
        </div>
    </body>

    <script>
        const formElement = document.getElementById('registerForm') as HTMLFormElement | null;
    
        if (formElement) { // Ensure the form element is not null
            formElement.addEventListener('submit', async function (event) {
                event.preventDefault(); // Prevent default form submission
                const formData = new FormData(formElement); // Use formElement directly
                const data = {
                    email: formData.get('email'),
                    password: formData.get('password'),
                    name: formData.get('name'),
                };
    
                try {
                    const response = await fetch('/api/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json', // Set the content type
                        },
                        body: JSON.stringify(data), // Convert the data to JSON
                    });
    
                    if (!response.ok) {
                        const errorText = await response.text(); // Get error message
                        throw new Error(errorText);
                    }
    
                    console.log('User registered successfully!');
                    // Redirect or perform further actions as needed
                } catch (error: unknown) {
                    // Type check for error to access the message safely
                    if (error instanceof Error) {
                        console.error('Error during registration:', error.message);
                        alert(error.message); // Display the error to the user
                    } else {
                        console.error('Unknown error during registration:', error);
                        alert('An unknown error occurred.'); // Display a generic error message
                    }
                }
            });
        } else {
            console.error('Form element with id "registerForm" not found.');
        }
    </script>

</Layout>